{"version":3,"sources":["../../src/hooks/useCsrfToken.ts","../../src/hooks/useConfetti.ts"],"names":[],"mappings":";;;AAIO,SAAS,YAAe,GAAA;AAC7B,EAAI,IAAA,OAAO,aAAa,WAAa,EAAA;AACnC,IAAO,OAAA,EAAA;AAAA;AAGT,EAAM,MAAA,IAAA,GAAO,QAAS,CAAA,aAAA,CAAc,yBAAyB,CAAA;AAE7D,EAAA,IAAI,CAAC,IAAM,EAAA;AACT,IAAO,OAAA,EAAA;AAAA;AAGT,EAAO,OAAA,IAAA,CAAK,YAAa,CAAA,SAAS,CAAK,IAAA,EAAA;AACzC;ACZO,IAAM,cAAc,MAAM;AAC/B,EAAA,MAAM,eAAe,MAAM;AACzB,IAAA,MAAM,WAAW,CAAI,GAAA,GAAA;AACrB,IAAM,MAAA,YAAA,GAAe,IAAK,CAAA,GAAA,EAAQ,GAAA,QAAA;AAClC,IAAM,MAAA,QAAA,GAAW,EAAE,aAAe,EAAA,EAAA,EAAI,QAAQ,GAAK,EAAA,KAAA,EAAO,EAAI,EAAA,MAAA,EAAQ,CAAE,EAAA;AAExE,IAAM,MAAA,aAAA,GAAgB,CAAC,GAAa,EAAA,GAAA,KAClC,KAAK,MAAO,EAAA,IAAK,MAAM,GAAO,CAAA,GAAA,GAAA;AAEhC,IAAM,MAAA,QAAA,GAAW,MAAO,CAAA,WAAA,CAAY,MAAM;AACxC,MAAM,MAAA,QAAA,GAAW,YAAe,GAAA,IAAA,CAAK,GAAI,EAAA;AAEzC,MAAA,IAAI,YAAY,CAAG,EAAA;AACjB,QAAA,OAAO,cAAc,QAAQ,CAAA;AAAA;AAG/B,MAAM,MAAA,aAAA,GAAgB,MAAM,QAAW,GAAA,QAAA,CAAA;AACvC,MAAS,QAAA,CAAA;AAAA,QACP,GAAG,QAAA;AAAA,QACH,aAAA;AAAA,QACA,MAAA,EAAQ,EAAE,CAAA,EAAG,aAAc,CAAA,GAAA,EAAK,GAAG,CAAA,EAAG,CAAG,EAAA,IAAA,CAAK,MAAO,EAAA,GAAI,GAAI;AAAA,OAC9D,CAAA;AACD,MAAS,QAAA,CAAA;AAAA,QACP,GAAG,QAAA;AAAA,QACH,aAAA;AAAA,QACA,MAAA,EAAQ,EAAE,CAAA,EAAG,aAAc,CAAA,GAAA,EAAK,GAAG,CAAA,EAAG,CAAG,EAAA,IAAA,CAAK,MAAO,EAAA,GAAI,GAAI;AAAA,OAC9D,CAAA;AAAA,OACA,GAAG,CAAA;AAAA,GACR;AAEA,EAAA,OAAO,EAAE,YAAa,EAAA;AACxB","file":"index.mjs","sourcesContent":["/**\n * Get the CSRF token from the meta tag.\n * @returns The CSRF token.\n */\nexport function useCsrfToken() {\n  if (typeof document === 'undefined') {\n    return '';\n  }\n\n  const meta = document.querySelector('meta[name=\"csrf-token\"]');\n\n  if (!meta) {\n    return '';\n  }\n\n  return meta.getAttribute('content') ?? '';\n}\n","'use client';\n\nimport confetti from 'canvas-confetti';\n\nexport const useConfetti = () => {\n  const fireConfetti = () => {\n    const duration = 5 * 1000;\n    const animationEnd = Date.now() + duration;\n    const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\n\n    const randomInRange = (min: number, max: number) =>\n      Math.random() * (max - min) + min;\n\n    const interval = window.setInterval(() => {\n      const timeLeft = animationEnd - Date.now();\n\n      if (timeLeft <= 0) {\n        return clearInterval(interval);\n      }\n\n      const particleCount = 50 * (timeLeft / duration);\n      confetti({\n        ...defaults,\n        particleCount,\n        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },\n      });\n      confetti({\n        ...defaults,\n        particleCount,\n        origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },\n      });\n    }, 250);\n  };\n\n  return { fireConfetti };\n};\n"]}