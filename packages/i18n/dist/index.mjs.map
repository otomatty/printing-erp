{"version":3,"sources":["../src/create-i18n-settings.ts"],"names":[],"mappings":";AAqBO,SAAS,kBAAmB,CAAA;AAAA,EACjC,SAAA;AAAA,EACA,QAAA;AAAA,EACA;AACF,CAIgB,EAAA;AACd,EAAA,MAAM,GAAM,GAAA,QAAA;AACZ,EAAA,MAAM,EAAK,GAAA,UAAA;AAEX,EAAO,OAAA;AAAA;AAAA,IAEL,aAAe,EAAA,SAAA;AAAA;AAAA,IAEf,WAAA,EAAa,UAAU,CAAC,CAAA;AAAA;AAAA,IAExB,SAAW,EAAA,MAAA;AAAA;AAAA,IAEX,GAAA;AAAA;AAAA,IAEA,IAAM,EAAA,cAAA;AAAA;AAAA,IAEN,OAAS,EAAA,KAAA;AAAA;AAAA,IAET,YAAc,EAAA,IAAA;AAAA;AAAA,IAEd,UAAY,EAAA,EAAA;AAAA;AAAA,IAEZ,2BAA6B,EAAA,CAAC,IAAM,EAAA,KAAA,EAAO,OAAY,KAAA;AACrD,MAAQ,OAAA,CAAA,KAAA;AAAA,QACN,wCAAwC,IAAI,CAAA,CAAA;AAAA,QAC5C,KAAA;AAAA,QACA;AAAA,OACF;AAAA,KACF;AAAA;AAAA,IAEA,EAAA;AAAA;AAAA,IAEA,KAAO,EAAA;AAAA;AAAA,MAEL,WAAa,EAAA;AAAA;AACf,GACF;AACF","file":"index.mjs","sourcesContent":["/**\n * create-i18n-settings.ts\n *\n * このファイルは、i18nextライブラリの設定を生成する関数を提供します。\n * 主な役割：\n * 1. i18nextの基本設定の生成\n * 2. 言語とネームスペースの設定\n * 3. フォールバック（代替言語）の設定\n * 4. Reactでの使用設定\n */\n\nimport type { InitOptions } from 'i18next';\n\n/**\n * i18nextの設定を生成する関数\n *\n * @param languages - サポートする言語のリスト（例：['en', 'ja', 'fr']）\n * @param language - 現在選択されている言語\n * @param namespaces - 翻訳のカテゴリー（例：['common', 'auth', 'settings']）\n * @returns i18nextの設定オブジェクト\n */\nexport function createI18nSettings({\n  languages,\n  language,\n  namespaces,\n}: {\n  languages: string[];\n  language: string;\n  namespaces?: string | string[];\n}): InitOptions {\n  const lng = language;\n  const ns = namespaces;\n\n  return {\n    // サポートする言語のリスト\n    supportedLngs: languages,\n    // 要求された言語が利用できない場合のフォールバック言語\n    fallbackLng: languages[0],\n    // サーバーサイドでは言語検出を無効化\n    detection: undefined,\n    // 現在の言語\n    lng,\n    // 言語コードのみを使用（国コードは無視）\n    load: 'languageOnly' as const,\n    // 起動時に全言語をプリロードしない\n    preload: false as const,\n    // 言語コードを小文字に統一\n    lowerCaseLng: true as const,\n    // フォールバック時に使用する名前空間\n    fallbackNS: ns,\n    // 補間値が見つからない場合のハンドラー\n    missingInterpolationHandler: (text, value, options) => {\n      console.debug(\n        `Missing interpolation value for key: ${text}`,\n        value,\n        options\n      );\n    },\n    // 使用する名前空間\n    ns,\n    // Reactでの設定\n    react: {\n      // Suspenseを使用して非同期ローディングを有効化\n      useSuspense: true,\n    },\n  };\n}\n"]}