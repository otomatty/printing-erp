{"version":3,"sources":["../../src/utils/index.ts","../../src/actions/enhance-action.ts"],"names":["verifyCaptchaToken","requireUser","getSupabaseServerClient","redirect"],"mappings":";;;;;;;;;;AAEO,IAAM,eACX,GAAA,CAAyB,MACzB,KAAA,CAAC,IAA8B,KAAA;AAC7B,EAAI,IAAA;AACF,IAAO,OAAA,MAAA,CAAO,MAAM,IAAI,CAAA;AAAA,WACjB,GAAK,EAAA;AACZ,IAAA,OAAA,CAAQ,MAAM,GAAG,CAAA;AAGjB,IAAA,MAAM,IAAI,KAAA,CAAM,CAAiB,cAAA,EAAA,GAAa,CAAE,CAAA,CAAA;AAAA;AAEpD,CAAA;;;ACSK,SAAS,aAAA,CAYd,IAIA,MACA,EAAA;AACA,EAAA,OAAO,OACL,MACG,KAAA;AAIH,IAAM,MAAA,WAAA,GAAc,OAAO,IAAQ,IAAA,IAAA;AACnC,IAAA,IAAI,IAAkB,GAAA,MAAA;AAGtB,IAAM,MAAA,IAAA,GAAO,OAAO,MAChB,GAAA,eAAA,CAAgB,OAAO,MAAM,CAAA,CAAE,MAAM,CACrC,GAAA,MAAA;AAGJ,IAAM,MAAA,aAAA,GAAgB,OAAO,OAAW,IAAA,KAAA;AAGxC,IAAA,IAAI,aAAe,EAAA;AACjB,MAAA,MAAM,QAAS,IAAyC,CAAA,YAAA;AAGxD,MAAA,MAAMA,0BAAmB,KAAK,CAAA;AAAA;AAIhC,IAAA,IAAI,WAAa,EAAA;AACf,MAAI,IAAA;AAEF,QAAA,MAAM,OAAO,MAAMC,uBAAA;AAAA,UACjBC,oCAAwB;AAAA,SAC1B;AAGA,QAAI,IAAA,CAAC,KAAK,IAAM,EAAA;AACd,UAAAC,mBAAA,CAAS,KAAK,UAAU,CAAA;AAAA;AAI1B,QAAA,IAAA,GAAO,IAAK,CAAA,IAAA;AAAA,eACL,KAAO,EAAA;AAAA;AAEhB;AAIF,IAAO,OAAA,EAAA,CAAG,MAAM,IAAI,CAAA;AAAA,GACtB;AACF","file":"enhance-action.js","sourcesContent":["import type { z } from 'zod';\n\nexport const zodParseFactory =\n  <T extends z.ZodTypeAny>(schema: T) =>\n  (data: unknown): z.infer<T> => {\n    try {\n      return schema.parse(data) as unknown;\n    } catch (err) {\n      console.error(err);\n\n      // handle error\n      throw new Error(`Invalid data: ${err as string}`);\n    }\n  };\n","import { redirect } from 'next/navigation';\nimport type { User } from '@supabase/supabase-js';\nimport type { ZodType, z } from 'zod';\nimport { verifyCaptchaToken } from '@kit/auth/captcha/server';\nimport {\n  requireUser,\n  type UserRequireClient,\n} from '@kit/supabase/require-user';\nimport { getSupabaseServerClient } from '@kit/supabase/server-client';\nimport { zodParseFactory } from '../utils';\n\n/**\n * @name enhanceAction\n * @description サーバーアクションを拡張し、CAPTCHA検証、スキーマ検証、認証チェックを追加します\n *\n * この関数は、Next.jsのサーバーアクションに以下の機能を追加します：\n * 1. 認証チェック: ユーザーが認証されているか確認し、未認証の場合はリダイレクト\n * 2. CAPTCHA検証: ボット対策のためのCAPTCHAトークン検証\n * 3. スキーマ検証: Zodを使用した入力データの型と値の検証\n *\n * これにより、各サーバーアクションで共通の検証ロジックを繰り返し実装する必要がなくなります。\n */\nexport function enhanceAction<\n  Args,\n  Response,\n  Config extends {\n    auth?: boolean;\n    captcha?: boolean;\n    schema?: z.ZodType<\n      Config['captcha'] extends true ? Args & { captchaToken: string } : Args,\n      z.ZodTypeDef\n    >;\n  },\n>(\n  fn: (\n    params: Config['schema'] extends ZodType ? z.infer<Config['schema']> : Args,\n    user: Config['auth'] extends false ? undefined : User\n  ) => Response | Promise<Response>,\n  config: Config\n) {\n  return async (\n    params: Config['schema'] extends ZodType ? z.infer<Config['schema']> : Args\n  ) => {\n    type UserParam = Config['auth'] extends false ? undefined : User;\n\n    // 認証が必要かどうかを設定から取得（デフォルトはtrue）\n    const requireAuth = config.auth ?? true;\n    let user: UserParam = undefined as UserParam;\n\n    // 設定でスキーマが指定されている場合、入力データを検証\n    const data = config.schema\n      ? zodParseFactory(config.schema)(params)\n      : params;\n\n    // CAPTCHAトークンの検証が必要かどうかを設定から取得（デフォルトはfalse）\n    const verifyCaptcha = config.captcha ?? false;\n\n    // CAPTCHAトークンの検証が必要な場合、トークンを検証\n    if (verifyCaptcha) {\n      const token = (data as Args & { captchaToken: string }).captchaToken;\n\n      // CAPTCHAトークンを検証。トークンが無効な場合はエラーをスロー\n      await verifyCaptchaToken(token);\n    }\n\n    // 認証が必要な場合、ユーザーが認証されているか確認\n    if (requireAuth) {\n      try {\n        // Supabaseクライアントを使用してユーザー認証情報を取得\n        const auth = await requireUser(\n          getSupabaseServerClient() as unknown as UserRequireClient\n        );\n\n        // ユーザーが認証されていない場合、指定されたURLにリダイレクト\n        if (!auth.data) {\n          redirect(auth.redirectTo);\n        }\n\n        // 認証済みの場合、ユーザー情報を user 変数に格納\n        user = auth.data as unknown as UserParam;\n      } catch (error) {\n        // エラー処理...\n      }\n    }\n\n    // すべての検証が成功したら、元の関数を実行して結果を返す\n    return fn(data, user);\n  };\n}\n"]}