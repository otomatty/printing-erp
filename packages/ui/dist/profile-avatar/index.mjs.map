{"version":3,"sources":["../../src/shadcn/avatar/index.tsx","../../src/makerkit/profile-avatar/index.tsx"],"names":["Avatar","className","props","ref","cn","AvatarImage","AvatarFallback","ProfileAvatar","avatarClassName","initials"],"mappings":"mKAOA,IAAMA,CAAe,CAAA,CAAA,CAAA,UAAA,CAGnB,CAAC,CAAE,UAAAC,GAAW,CAAA,GAAGC,CAAM,CAAGC,CAAAA,CAAAA,GAC1B,gBAAiB,CAAhB,CAAA,IAAA,CAAA,CACC,GAAKA,CAAAA,CAAAA,CACL,UAAWC,CACT,CAAA,+DAAA,CACAH,GACF,CACC,CAAA,GAAGC,EACN,CACD,CAAA,CACDF,CAAO,CAAA,WAAA,CAA8B,OAAK,WAE1C,CAAA,IAAMK,EAAoB,CAGxB,CAAA,UAAA,CAAA,CAAC,CAAE,SAAAJ,CAAAA,GAAAA,CAAW,GAAGC,CAAM,EAAGC,CAC1B,GAAA,CAAA,CAAA,aAAA,CAAiB,CAAhB,CAAA,KAAA,CAAA,CACC,IAAKA,CACL,CAAA,SAAA,CAAWC,CAAG,CAAA,6BAAA,CAA+BH,GAAS,CACrD,CAAA,GAAGC,EACN,CACD,CAAA,CACDG,EAAY,WAA8B,CAAA,CAAA,CAAA,KAAA,CAAM,WAEhD,CAAA,IAAMC,EAAuB,CAG3B,CAAA,UAAA,CAAA,CAAC,CAAE,SAAAL,CAAAA,GAAAA,CAAW,GAAGC,CAAM,CAAA,CAAGC,CAC1B,GAAA,CAAA,CAAA,aAAA,CAAiB,WAAhB,CACC,GAAA,CAAKA,EACL,SAAWC,CAAAA,CAAAA,CACT,uEACAH,GACF,CAAA,CACC,GAAGC,CAAAA,CACN,CACD,CACDI,CAAAA,CAAAA,CAAe,WAA8B,CAAA,CAAA,CAAA,QAAA,CAAS,YC9B/C,SAASC,CAAAA,CAAcL,GAA2B,CAAA,CACvD,IAAMM,CAAkBJ,CAAAA,CAAAA,CACtBF,IAAM,SACN,CAAA,oCACF,EAEA,GAAI,MAAA,GAAUA,GACZ,CAAA,OACE,oBAACF,CAAA,CAAA,CAAO,UAAWQ,CACjB,CAAA,CAAA,KAAA,CAAA,aAAA,CAACF,EAAA,CACC,SAAA,CAAWF,CACTF,CAAAA,GAAAA,CAAM,kBACN,8BACF,CAAA,CAAA,CAECA,IAAM,IAAK,CAAA,KAAA,CAAM,EAAG,CAAC,CACxB,CACF,CAAA,CAIJ,IAAMO,CAAWP,CAAAA,GAAAA,CAAM,aAAa,KAAM,CAAA,CAAA,CAAG,CAAC,CAE9C,CAAA,OACE,KAACF,CAAAA,aAAAA,CAAAA,CAAAA,CAAA,CAAO,SAAWQ,CAAAA,CAAAA,CAAAA,CACjB,oBAACH,CAAA,CAAA,CAAY,IAAKH,GAAM,CAAA,UAAA,EAAc,MAAW,CAAA,CAAA,CAEjD,oBAACI,CAAA,CAAA,CACC,UAAWF,CAAGF,CAAAA,GAAAA,CAAM,kBAAmB,oBAAoB,CAAA,CAAA,CAE3D,KAAC,CAAA,aAAA,CAAA,MAAA,CAAA,CAAK,yBAAwB,IAAC,CAAA,SAAA,CAAW,aACvCO,CACH,CACF,CACF,CAEJ","file":"index.mjs","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\n\nimport { cn } from '../../lib/utils/cn';\n\nconst Avatar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  HTMLImageElement,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarImage, AvatarFallback };\n","import { cn } from '../../lib/utils';\nimport { Avatar, AvatarFallback, AvatarImage } from '../../shadcn/avatar';\n\ntype SessionProps = {\n  displayName: string | null;\n  pictureUrl?: string | null;\n};\n\ntype TextProps = {\n  text: string;\n};\n\ntype ProfileAvatarProps = (SessionProps | TextProps) & {\n  className?: string;\n  fallbackClassName?: string;\n};\n\nexport function ProfileAvatar(props: ProfileAvatarProps) {\n  const avatarClassName = cn(\n    props.className,\n    'mx-auto h-9 w-9 group-focus:ring-2'\n  );\n\n  if ('text' in props) {\n    return (\n      <Avatar className={avatarClassName}>\n        <AvatarFallback\n          className={cn(\n            props.fallbackClassName,\n            'animate-in fade-in uppercase'\n          )}\n        >\n          {props.text.slice(0, 1)}\n        </AvatarFallback>\n      </Avatar>\n    );\n  }\n\n  const initials = props.displayName?.slice(0, 1);\n\n  return (\n    <Avatar className={avatarClassName}>\n      <AvatarImage src={props.pictureUrl ?? undefined} />\n\n      <AvatarFallback\n        className={cn(props.fallbackClassName, 'animate-in fade-in')}\n      >\n        <span suppressHydrationWarning className={'uppercase'}>\n          {initials}\n        </span>\n      </AvatarFallback>\n    </Avatar>\n  );\n}\n"]}