{"version":3,"sources":["../../src/shadcn/select/index.tsx","../../src/makerkit/language-selector/index.tsx"],"names":["Select","SelectValue","SelectTrigger","className","children","props","cn","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","position","SelectItem","Check","LanguageSelector","onChange","i18n","useTranslation","currentLanguage","options","locales","locale","languageNames","useMemo","value","setValue","useState","languageChanged","useCallback","label","capitalize","option","lang"],"mappings":"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","file":"index.mjs","sourcesContent":["'use client';\n\nimport type * as React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\n\nimport { cn } from '../../lib/utils';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nfunction SelectTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger>) {\n  return (\n    <SelectPrimitive.Trigger\n      className={cn(\n        'flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-2xs ring-offset-background placeholder:text-muted-foreground focus:outline-hidden focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDown className=\"h-4 w-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  );\n}\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className\n      )}\n      {...props}\n    >\n      <ChevronUp className=\"h-4 w-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  );\n}\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className\n      )}\n      {...props}\n    >\n      <ChevronDown className=\"h-4 w-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  );\n}\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nfunction SelectContent({\n  className,\n  children,\n  position = 'popper',\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        className={cn(\n          'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n          position === 'popper' &&\n            'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            'p-1',\n            position === 'popper' &&\n              'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n}\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      className={cn('px-2 py-1.5 text-sm font-semibold', className)}\n      {...props}\n    />\n  );\n}\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      className={cn(\n        'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-hidden focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <Check className=\"h-4 w-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n}\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      className={cn('-mx-1 my-1 h-px bg-muted', className)}\n      {...props}\n    />\n  );\n}\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","'use client';\n\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../../shadcn/select';\n\nexport function LanguageSelector({\n  onChange,\n}: {\n  onChange?: (locale: string) => unknown;\n}) {\n  const { i18n } = useTranslation();\n  const { language: currentLanguage, options } = i18n;\n\n  const locales = (options.supportedLngs as string[]).filter(\n    (locale) => locale.toLowerCase() !== 'cimode'\n  );\n\n  const languageNames = useMemo(() => {\n    return new Intl.DisplayNames([currentLanguage], {\n      type: 'language',\n    });\n  }, [currentLanguage]);\n\n  const [value, setValue] = useState(i18n.language);\n\n  const languageChanged = useCallback(\n    async (locale: string) => {\n      setValue(locale);\n\n      if (onChange) {\n        onChange(locale);\n      }\n\n      await i18n.changeLanguage(locale);\n\n      // refresh cached translations\n      window.location.reload();\n    },\n    [i18n, onChange]\n  );\n\n  return (\n    <Select value={value} onValueChange={languageChanged}>\n      <SelectTrigger>\n        <SelectValue />\n      </SelectTrigger>\n\n      <SelectContent>\n        {locales.map((locale) => {\n          const label = capitalize(languageNames.of(locale) ?? locale);\n\n          const option = {\n            value: locale,\n            label,\n          };\n\n          return (\n            <SelectItem value={option.value} key={option.value}>\n              {option.label}\n            </SelectItem>\n          );\n        })}\n      </SelectContent>\n    </Select>\n  );\n}\n\nfunction capitalize(lang: string) {\n  return lang.slice(0, 1).toUpperCase() + lang.slice(1);\n}\n"]}