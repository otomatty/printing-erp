{"version":3,"sources":["../../src/makerkit/navigation-config/schema.ts"],"names":["RouteMatchingEnd","z","Divider","RouteSubChild","RouteChild","RouteGroup","NavigationConfigSchema","value"],"mappings":"oEAEA,IAAMA,EAAmBC,KACtB,CAAA,KAAA,CAAM,CAACA,KAAAA,CAAE,OAAQ,EAAA,CAAGA,MAAE,QAAS,EAAA,CAAE,IAAKA,CAAAA,KAAAA,CAAE,MAAO,EAAC,EAAE,OAAQA,CAAAA,KAAAA,CAAE,OAAQ,EAAC,CAAC,CAAC,EACvE,OAAQ,CAAA,KAAK,CACb,CAAA,QAAA,EAEGC,CAAAA,CAAAA,CAAUD,MAAE,MAAO,CAAA,CACvB,OAASA,CAAAA,KAAAA,CAAE,OAAQ,CAAA,IAAI,CACzB,CAAC,CAAA,CAEKE,CAAgBF,CAAAA,KAAAA,CAAE,MAAO,CAAA,CAC7B,MAAOA,KAAE,CAAA,MAAA,EACT,CAAA,IAAA,CAAMA,KAAE,CAAA,MAAA,GACR,IAAMA,CAAAA,KAAAA,CAAE,QAA0B,CAAA,QAAA,GAClC,GAAKD,CAAAA,CAAAA,CACL,YAAcC,CAAAA,KAAAA,CAAE,MAAwB,EAAA,CAAE,UAC5C,CAAC,CAEKG,CAAAA,CAAAA,CAAaH,KAAE,CAAA,MAAA,CAAO,CAC1B,KAAOA,CAAAA,KAAAA,CAAE,MAAO,EAAA,CAChB,IAAMA,CAAAA,KAAAA,CAAE,QACR,CAAA,IAAA,CAAMA,KAAE,CAAA,MAAA,EAA0B,CAAA,QAAA,GAClC,GAAKD,CAAAA,CAAAA,CACL,QAAUC,CAAAA,KAAAA,CAAE,KAAME,CAAAA,CAAa,EAAE,OAAQ,CAAA,EAAE,CAAA,CAAE,QAAS,EAAA,CACtD,YAAaF,KAAE,CAAA,OAAA,EAAU,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAE,UACxC,CAAA,SAAA,CAAWA,MAAE,OAAQ,EAAA,CAAE,QAAQ,KAAK,CAAA,CAAE,QAAS,EAAA,CAC/C,YAAcA,CAAAA,KAAAA,CAAE,QAA0B,CAAA,QAAA,EAC5C,CAAC,CAEKI,CAAAA,CAAAA,CAAaJ,MAAE,MAAO,CAAA,CAC1B,KAAOA,CAAAA,KAAAA,CAAE,MAAO,EAAA,CAChB,YAAaA,KAAE,CAAA,OAAA,EAAU,CAAA,QAAA,EACzB,CAAA,SAAA,CAAWA,MAAE,OAAQ,EAAA,CAAE,QAAS,EAAA,CAChC,QAAUA,CAAAA,KAAAA,CAAE,MAAMG,CAAU,CAAA,CAC5B,YAAcH,CAAAA,KAAAA,CAAE,MAAwB,EAAA,CAAE,UAC5C,CAAC,CAEYK,CAAAA,CAAAA,CAAyBL,KAAE,CAAA,MAAA,CAAO,CAC7C,KAAOA,CAAAA,KAAAA,CAAE,IAAK,CAAA,CAAC,QAAU,CAAA,SAAA,CAAW,QAAQ,CAAC,CAAA,CAAE,OAAQ,CAAA,SAAS,CAChE,CAAA,gBAAA,CAAkBA,MACf,IAAK,CAAA,CAAC,OAAS,CAAA,MAAM,CAAC,CAAA,CACtB,QAAQ,MAAM,CAAA,CACd,QAAS,EAAA,CACT,SAAWM,CAAAA,CAAAA,EAAUA,IAAU,MAAM,CAAA,CACxC,qBAAuBN,CAAAA,KAAAA,CAAE,IAAK,CAAA,CAAC,YAAa,MAAQ,CAAA,MAAM,CAAC,CAAA,CAAE,OAAQ,CAAA,MAAM,EAC3E,MAAQA,CAAAA,KAAAA,CAAE,KAAMA,CAAAA,KAAAA,CAAE,KAAM,CAAA,CAACI,EAAYH,CAAO,CAAC,CAAC,CAChD,CAAC","file":"schema.js","sourcesContent":["import { z } from 'zod';\n\nconst RouteMatchingEnd = z\n  .union([z.boolean(), z.function().args(z.string()).returns(z.boolean())])\n  .default(false)\n  .optional();\n\nconst Divider = z.object({\n  divider: z.literal(true),\n});\n\nconst RouteSubChild = z.object({\n  label: z.string(),\n  path: z.string(),\n  Icon: z.custom<React.ReactNode>().optional(),\n  end: RouteMatchingEnd,\n  renderAction: z.custom<React.ReactNode>().optional(),\n});\n\nconst RouteChild = z.object({\n  label: z.string(),\n  path: z.string(),\n  Icon: z.custom<React.ReactNode>().optional(),\n  end: RouteMatchingEnd,\n  children: z.array(RouteSubChild).default([]).optional(),\n  collapsible: z.boolean().default(false).optional(),\n  collapsed: z.boolean().default(false).optional(),\n  renderAction: z.custom<React.ReactNode>().optional(),\n});\n\nconst RouteGroup = z.object({\n  label: z.string(),\n  collapsible: z.boolean().optional(),\n  collapsed: z.boolean().optional(),\n  children: z.array(RouteChild),\n  renderAction: z.custom<React.ReactNode>().optional(),\n});\n\nexport const NavigationConfigSchema = z.object({\n  style: z.enum(['custom', 'sidebar', 'header']).default('sidebar'),\n  sidebarCollapsed: z\n    .enum(['false', 'true'])\n    .default('true')\n    .optional()\n    .transform((value) => value === 'true'),\n  sidebarCollapsedStyle: z.enum(['offcanvas', 'icon', 'none']).default('icon'),\n  routes: z.array(z.union([RouteGroup, Divider])),\n});\n"]}