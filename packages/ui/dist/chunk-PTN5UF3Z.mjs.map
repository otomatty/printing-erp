{"version":3,"sources":["../src/makerkit/if/index.tsx"],"names":["If","condition","children","fallback","useMemo"],"mappings":"4BAIO,SAASA,CAAAA,CAAoB,CAClC,SAAAC,CAAAA,CAAAA,CACA,QAAAC,CAAAA,CAAAA,CACA,SAAAC,CACF,CAAA,CAII,CACF,OAAOC,OAAAA,CAAQ,IACTH,CACE,CAAA,OAAOC,CAAa,EAAA,UAAA,CACf,wCAAGA,CAASD,CAAAA,CAAS,CAAE,CAGzB,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAGC,CAAS,CAGjBC,CAAAA,CAAAA,CACK,KAAGA,CAAAA,aAAAA,CAAAA,KAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,CAAS,EAGd,IACN,CAAA,CAACF,EAAWE,CAAUD,CAAAA,CAAQ,CAAC,CACpC","file":"chunk-PTN5UF3Z.mjs","sourcesContent":["import { useMemo } from 'react';\n\ntype Condition<Value = unknown> = Value | false | null | undefined | 0 | '';\n\nexport function If<Value = unknown>({\n  condition,\n  children,\n  fallback,\n}: React.PropsWithoutRef<{\n  condition: Condition<Value>;\n  children: React.ReactNode | ((value: Value) => React.ReactNode);\n  fallback?: React.ReactNode;\n}>) {\n  return useMemo(() => {\n    if (condition) {\n      if (typeof children === 'function') {\n        return <>{children(condition)}</>;\n      }\n\n      return <>{children}</>;\n    }\n\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    return null;\n  }, [condition, fallback, children]);\n}\n"]}