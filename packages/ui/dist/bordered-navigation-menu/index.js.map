{"version":3,"sources":["../../src/shadcn/navigation-menu/index.tsx","../../src/makerkit/bordered-navigation-menu/index.tsx"],"names":["NavigationMenu","i","className","children","props","ref","e","cn","NavigationMenuViewport","NavigationMenuList","NavigationMenuItem","navigationMenuTriggerStyle","cva","NavigationMenuTrigger","ChevronDown","NavigationMenuContent","NavigationMenuIndicator","BorderedNavigationMenu","BorderedNavigationMenuItem","pathname","usePathname","active","isRouteActive","Button","Link","Trans"],"mappings":"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","file":"index.js","sourcesContent":["import * as React from 'react';\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu';\nimport { cva } from 'class-variance-authority';\nimport { ChevronDown } from 'lucide-react';\n\nimport { cn } from '../../lib/utils';\n\nconst NavigationMenu = React.forwardRef<\n  React.ComponentRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative z-10 flex max-w-max flex-1 items-center justify-center',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n));\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;\n\nconst NavigationMenuList = React.forwardRef<\n  React.ComponentRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      'group flex flex-1 list-none items-center justify-center space-x-1',\n      className\n    )}\n    {...props}\n  />\n));\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item;\n\nconst navigationMenuTriggerStyle = cva(\n  'group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-hidden disabled:pointer-events-none disabled:opacity-50 data-active:bg-accent/50 data-[state=open]:bg-accent/50'\n);\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ComponentRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), 'group', className)}\n    {...props}\n  >\n    {children}{' '}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n));\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ComponentRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      'left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ',\n      className\n    )}\n    {...props}\n  />\n));\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link;\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ComponentRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn('absolute left-0 top-full flex justify-center')}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        'origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-xs data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n));\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName;\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ComponentRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      'top-full z-1 flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in',\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n));\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName;\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n};\n","'use client';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nimport { cn, isRouteActive } from '../../lib/utils';\nimport { Button } from '../../shadcn/button';\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuList,\n} from '../../shadcn/navigation-menu';\nimport { Trans } from '../trans';\n\nexport function BorderedNavigationMenu(props: React.PropsWithChildren) {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList className={'relative h-full space-x-2'}>\n        {props.children}\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n}\n\nexport function BorderedNavigationMenuItem(props: {\n  path: string;\n  label: React.ReactNode | string;\n  end?: boolean | ((path: string) => boolean);\n  active?: boolean;\n  className?: string;\n  buttonClassName?: string;\n}) {\n  const pathname = usePathname();\n\n  const active = props.active ?? isRouteActive(props.path, pathname, props.end);\n\n  return (\n    <NavigationMenuItem className={props.className}>\n      <Button\n        asChild\n        variant={'ghost'}\n        className={cn('relative active:shadow-xs', props.buttonClassName)}\n      >\n        <Link\n          href={props.path}\n          className={cn('text-sm', {\n            'text-secondary-foreground': active,\n            'text-secondary-foreground/80 hover:text-secondary-foreground':\n              !active,\n          })}\n        >\n          {typeof props.label === 'string' ? (\n            <Trans i18nKey={props.label} defaults={props.label} />\n          ) : (\n            props.label\n          )}\n\n          {active ? (\n            <span\n              className={cn(\n                'bg-primary animate-in fade-in zoom-in-90 absolute -bottom-2.5 left-0 h-0.5 w-full'\n              )}\n            />\n          ) : null}\n        </Link>\n      </Button>\n    </NavigationMenuItem>\n  );\n}\n"]}