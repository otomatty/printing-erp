{"version":3,"sources":["../../src/shadcn/sidebar/index.tsx"],"names":["SIDEBAR_COOKIE_NAME","SIDEBAR_COOKIE_MAX_AGE","SIDEBAR_WIDTH","SIDEBAR_WIDTH_MOBILE","SIDEBAR_WIDTH_ICON","SIDEBAR_KEYBOARD_SHORTCUT","SidebarContext","useSidebar","context","SidebarProvider","defaultOpen","openProp","setOpenProp","className","style","children","props","ref","isMobile","useIsMobile","openMobile","setOpenMobile","_open","_setOpen","open","setOpen","value","openState","toggleSidebar","handleKeyDown","event","state","contextValue","TooltipProvider","cn","Sidebar","side","variant","collapsible","Sheet","SheetContent","SidebarTrigger","onClick","Button","PanelLeft","SidebarRail","SidebarInset","SidebarInput","Input","SidebarHeader","SidebarFooter","SidebarSeparator","Separator","SidebarContent","SidebarGroup","SidebarGroupLabel","asChild","Slot","SidebarGroupAction","SidebarGroupContent","SidebarMenu","SidebarMenuItem","sidebarMenuButtonVariants","cva","SidebarMenuButton","isActive","size","tooltip","Comp","button","Tooltip","TooltipTrigger","TooltipContent","SidebarMenuAction","showOnHover","SidebarMenuBadge","SidebarMenuSkeleton","showIcon","width","Skeleton","SidebarMenuSub","SidebarMenuSubItem","SidebarMenuSubButton"],"mappings":"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","file":"index.mjs","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport { PanelLeft } from 'lucide-react';\n\nimport { useIsMobile } from '../../hooks/use-mobile';\nimport { cn } from '../../lib/utils';\nimport { Button } from '../button';\nimport { Input } from '../input';\nimport { Separator } from '../separator';\nimport { Sheet, SheetContent } from '../sheet';\nimport { Skeleton } from '../skeleton';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '../tooltip';\n\nconst SIDEBAR_COOKIE_NAME = 'sidebar:state';\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = '16rem';\nconst SIDEBAR_WIDTH_MOBILE = '18rem';\nconst SIDEBAR_WIDTH_ICON = '3rem';\nconst SIDEBAR_KEYBOARD_SHORTCUT = 'b';\n\ntype SidebarContext = {\n  state: 'expanded' | 'collapsed';\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  openMobile: boolean;\n  setOpenMobile: (open: boolean) => void;\n  isMobile: boolean;\n  toggleSidebar: () => void;\n};\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null);\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext);\n  if (!context) {\n    throw new Error('useSidebar must be used within a SidebarProvider.');\n  }\n\n  return context;\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & {\n    defaultOpen?: boolean;\n    open?: boolean;\n    onOpenChange?: (open: boolean) => void;\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile();\n    const [openMobile, setOpenMobile] = React.useState(false);\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen);\n    const open = openProp ?? _open;\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === 'function' ? value(open) : value;\n        if (setOpenProp) {\n          setOpenProp(openState);\n        } else {\n          _setOpen(openState);\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n      },\n      [setOpenProp, open]\n    );\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open);\n    }, [isMobile, setOpen]);\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault();\n          toggleSidebar();\n        }\n      };\n\n      window.addEventListener('keydown', handleKeyDown);\n      return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [toggleSidebar]);\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? 'expanded' : 'collapsed';\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, toggleSidebar]\n    );\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                '--sidebar-width': SIDEBAR_WIDTH,\n                '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              'group/sidebar-wrapper flex min-h-svh w-full has-data-[variant=inset]:bg-sidebar',\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    );\n  }\n);\nSidebarProvider.displayName = 'SidebarProvider';\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & {\n    side?: 'left' | 'right';\n    variant?: 'sidebar' | 'floating' | 'inset';\n    collapsible?: 'offcanvas' | 'icon' | 'none';\n  }\n>(\n  (\n    {\n      side = 'left',\n      variant = 'sidebar',\n      collapsible = 'offcanvas',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n\n    if (collapsible === 'none') {\n      return (\n        <div\n          className={cn(\n            'flex h-full w-(--sidebar-width) flex-col bg-sidebar text-sidebar-foreground',\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-(--sidebar-width) bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                '--sidebar-width': SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      );\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === 'collapsed' ? collapsible : ''}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            'relative h-svh w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear',\n            'group-data-[collapsible=offcanvas]:w-0',\n            'group-data-[side=right]:rotate-180',\n            variant === 'floating' || variant === 'inset'\n              ? 'group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]'\n              : 'group-data-[collapsible=icon]:w-(--sidebar-width-icon)'\n          )}\n        />\n        <div\n          className={cn(\n            'fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex',\n            side === 'left'\n              ? 'left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]'\n              : 'right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]',\n            // Adjust the padding for floating and inset variants.\n            variant === 'floating' || variant === 'inset'\n              ? 'p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]'\n              : 'group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l',\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow-xs\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nSidebar.displayName = 'Sidebar';\n\nconst SidebarTrigger = React.forwardRef<\n  React.ComponentRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn('h-7 w-7', className)}\n      onClick={(event) => {\n        onClick?.(event);\n        toggleSidebar();\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  );\n});\nSidebarTrigger.displayName = 'SidebarTrigger';\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'>\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        'absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex',\n        'in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize',\n        '[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize',\n        'group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar',\n        '[[data-side=left][data-collapsible=offcanvas]_&]:-right-2',\n        '[[data-side=right][data-collapsible=offcanvas]_&]:-left-2',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarRail.displayName = 'SidebarRail';\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'main'>\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        'relative flex min-h-svh flex-1 flex-col bg-background',\n        'peer-data-[variant=inset]:min-h-[calc(100svh-(--spacing(4)))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-xs',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarInset.displayName = 'SidebarInset';\n\nconst SidebarInput = React.forwardRef<\n  React.ComponentRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        'h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarInput.displayName = 'SidebarInput';\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn('flex flex-col gap-2 p-2', className)}\n      {...props}\n    />\n  );\n});\nSidebarHeader.displayName = 'SidebarHeader';\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn('flex flex-col gap-2 p-2', className)}\n      {...props}\n    />\n  );\n});\nSidebarFooter.displayName = 'SidebarFooter';\n\nconst SidebarSeparator = React.forwardRef<\n  React.ComponentRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn('mx-2 w-auto bg-sidebar-border', className)}\n      {...props}\n    />\n  );\n});\nSidebarSeparator.displayName = 'SidebarSeparator';\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        'flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarContent.displayName = 'SidebarContent';\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn('relative flex w-full min-w-0 flex-col p-2', className)}\n      {...props}\n    />\n  );\n});\nSidebarGroup.displayName = 'SidebarGroup';\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'div';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        'flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-hidden ring-sidebar-ring transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        'group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarGroupLabel.displayName = 'SidebarGroupLabel';\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        'absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-hidden ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        // Increases the hit area of the button on mobile.\n        'after:absolute after:-inset-2 md:after:hidden',\n        'group-data-[collapsible=icon]:hidden',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarGroupAction.displayName = 'SidebarGroupAction';\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn('w-full text-sm', className)}\n    {...props}\n  />\n));\nSidebarGroupContent.displayName = 'SidebarGroupContent';\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<'ul'>\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn('flex w-full min-w-0 flex-col gap-1', className)}\n    {...props}\n  />\n));\nSidebarMenu.displayName = 'SidebarMenu';\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<'li'>\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn('group/menu-item relative', className)}\n    {...props}\n  />\n));\nSidebarMenuItem.displayName = 'SidebarMenuItem';\n\nconst sidebarMenuButtonVariants = cva(\n  'peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding,background-color] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-primary data-[active=true]:font-medium data-[active=true]:text-primary-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'hover:bg-sidebar-accent hover:text-sidebar-accent-foreground',\n        outline:\n          'bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]',\n      },\n      size: {\n        default: 'h-8 text-sm',\n        sm: 'h-7 text-xs',\n        lg: 'h-12 text-sm group-data-[collapsible=icon]:p-0!',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'> & {\n    asChild?: boolean;\n    isActive?: boolean;\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>;\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = 'default',\n      size = 'default',\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    const { isMobile, state } = useSidebar();\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    );\n\n    if (!tooltip) {\n      return button;\n    }\n\n    if (typeof tooltip === 'string') {\n      tooltip = {\n        children: tooltip,\n      };\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== 'collapsed' || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    );\n  }\n);\nSidebarMenuButton.displayName = 'SidebarMenuButton';\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'> & {\n    asChild?: boolean;\n    showOnHover?: boolean;\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        'absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-hidden ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0',\n        // Increases the hit area of the button on mobile.\n        'after:absolute after:-inset-2 md:after:hidden',\n        'peer-data-[size=sm]/menu-button:top-1',\n        'peer-data-[size=default]/menu-button:top-1.5',\n        'peer-data-[size=lg]/menu-button:top-2.5',\n        'group-data-[collapsible=icon]:hidden',\n        showOnHover &&\n          'group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuAction.displayName = 'SidebarMenuAction';\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      'pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground',\n      'peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground',\n      'peer-data-[size=sm]/menu-button:top-1',\n      'peer-data-[size=default]/menu-button:top-1.5',\n      'peer-data-[size=lg]/menu-button:top-2.5',\n      'group-data-[collapsible=icon]:hidden',\n      className\n    )}\n    {...props}\n  />\n));\nSidebarMenuBadge.displayName = 'SidebarMenuBadge';\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & {\n    showIcon?: boolean;\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`;\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn('flex h-8 items-center gap-2 rounded-md px-2', className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-(--skeleton-width) flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            '--skeleton-width': width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  );\n});\nSidebarMenuSkeleton.displayName = 'SidebarMenuSkeleton';\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<'ul'>\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      'mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5',\n      'group-data-[collapsible=icon]:hidden',\n      className\n    )}\n    {...props}\n  />\n));\nSidebarMenuSub.displayName = 'SidebarMenuSub';\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<'li'>\n>(({ ...props }, ref) => <li ref={ref} {...props} />);\nSidebarMenuSubItem.displayName = 'SidebarMenuSubItem';\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<'a'> & {\n    asChild?: boolean;\n    size?: 'sm' | 'md';\n    isActive?: boolean;\n  }\n>(({ asChild = false, size = 'md', isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'a';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        'flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-hidden ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground',\n        'data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground',\n        size === 'sm' && 'text-xs',\n        size === 'md' && 'text-sm',\n        'group-data-[collapsible=icon]:hidden',\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuSubButton.displayName = 'SidebarMenuSubButton';\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n};\n"]}