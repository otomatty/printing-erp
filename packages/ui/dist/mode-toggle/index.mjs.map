{"version":3,"sources":["../../src/shadcn/dropdown-menu/index.tsx","../../src/makerkit/mode-toggle/index.tsx"],"names":["DropdownMenu","DropdownMenuTrigger","DropdownMenuSub","DropdownMenuSubTrigger","className","inset","children","props","cn","ChevronRight","DropdownMenuSubContent","DropdownMenuContent","sideOffset","DropdownMenuItem","DropdownMenuLabel","MODES","ModeToggle","setTheme","theme","useTheme","Items","useMemo","mode","setCookeTheme","Icon","Trans","Button","Sun","Moon","SubMenuModeToggle","resolvedTheme","MenuItems","Computer"],"mappings":"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","file":"index.mjs","sourcesContent":["'use client';\n\nimport type * as React from 'react';\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\n\nimport { cn } from '../../lib/utils';\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\ninterface DropdownMenuSubTriggerProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> {\n  inset?: boolean;\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: DropdownMenuSubTriggerProps) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      className={cn(\n        'flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-hidden focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n        inset && 'pl-8',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRight className=\"ml-auto\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n}\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName;\n\ninterface DropdownMenuSubContentProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.SubContent> {}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: DropdownMenuSubContentProps) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      className={cn(\n        'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className\n      )}\n      {...props}\n    />\n  );\n}\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName;\n\ninterface DropdownMenuContentProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.Content> {\n  sideOffset?: number;\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: DropdownMenuContentProps) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        sideOffset={sideOffset}\n        className={cn(\n          'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\n          'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  );\n}\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\ninterface DropdownMenuItemProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.Item> {\n  inset?: boolean;\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  ...props\n}: DropdownMenuItemProps) {\n  return (\n    <DropdownMenuPrimitive.Item\n      className={cn(\n        'relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0',\n        inset && 'pl-8',\n        className\n      )}\n      {...props}\n    />\n  );\n}\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\ninterface DropdownMenuCheckboxItemProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem> {}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: DropdownMenuCheckboxItemProps) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      className={cn(\n        'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <Check className=\"h-4 w-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n}\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName;\n\ninterface DropdownMenuRadioItemProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem> {}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: DropdownMenuRadioItemProps) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      className={cn(\n        'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <Circle className=\"h-2 w-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n}\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\ninterface DropdownMenuLabelProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.Label> {\n  inset?: boolean;\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: DropdownMenuLabelProps) {\n  return (\n    <DropdownMenuPrimitive.Label\n      className={cn(\n        'px-2 py-1.5 text-sm font-semibold',\n        inset && 'pl-8',\n        className\n      )}\n      {...props}\n    />\n  );\n}\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\ninterface DropdownMenuSeparatorProps\n  extends React.ComponentProps<typeof DropdownMenuPrimitive.Separator> {}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: DropdownMenuSeparatorProps) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      className={cn('-mx-1 my-1 h-px bg-muted', className)}\n      {...props}\n    />\n  );\n}\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      className={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n      {...props}\n    />\n  );\n}\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n};\n","'use client';\n\nimport { useMemo } from 'react';\n\nimport { Computer, Moon, Sun } from 'lucide-react';\nimport { useTheme } from 'next-themes';\n\nimport { cn } from '../../lib/utils';\nimport { Button } from '../../shadcn/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from '../../shadcn/dropdown-menu';\nimport { Trans } from '../trans';\n\nconst MODES = ['light', 'dark', 'system'];\n\nexport function ModeToggle(props: { className?: string }) {\n  const { setTheme, theme } = useTheme();\n\n  const Items = useMemo(() => {\n    return MODES.map((mode) => {\n      const isSelected = theme === mode;\n\n      return (\n        <DropdownMenuItem\n          className={cn('space-x-2', {\n            'bg-muted': isSelected,\n          })}\n          key={mode}\n          onClick={() => {\n            setTheme(mode);\n            setCookeTheme(mode);\n          }}\n        >\n          <Icon theme={mode} />\n\n          <span>\n            <Trans i18nKey={`common:${mode}Theme`} />\n          </span>\n        </DropdownMenuItem>\n      );\n    });\n  }, [setTheme, theme]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" className={props.className}>\n          <Sun className=\"h-[0.9rem] w-[0.9rem] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90\" />\n          <Moon className=\"absolute h-[0.9rem] w-[0.9rem] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent align=\"end\">{Items}</DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport function SubMenuModeToggle() {\n  const { setTheme, theme, resolvedTheme } = useTheme();\n\n  const MenuItems = useMemo(\n    () =>\n      MODES.map((mode) => {\n        const isSelected = theme === mode;\n\n        return (\n          <DropdownMenuItem\n            className={cn('flex cursor-pointer items-center space-x-2', {\n              'bg-muted': isSelected,\n            })}\n            key={mode}\n            onClick={() => {\n              setTheme(mode);\n              setCookeTheme(mode);\n            }}\n          >\n            <Icon theme={mode} />\n\n            <span>\n              <Trans i18nKey={`common:${mode}Theme`} />\n            </span>\n          </DropdownMenuItem>\n        );\n      }),\n    [setTheme, theme]\n  );\n\n  return (\n    <>\n      <DropdownMenuSub>\n        <DropdownMenuSubTrigger\n          className={\n            'hidden w-full items-center justify-between gap-x-3 lg:flex'\n          }\n        >\n          <span className={'flex space-x-2'}>\n            <Icon theme={resolvedTheme} />\n\n            <span>\n              <Trans i18nKey={'common:theme'} />\n            </span>\n          </span>\n        </DropdownMenuSubTrigger>\n\n        <DropdownMenuSubContent>{MenuItems}</DropdownMenuSubContent>\n      </DropdownMenuSub>\n\n      <div className={'lg:hidden'}>\n        <DropdownMenuLabel>\n          <Trans i18nKey={'common:theme'} />\n        </DropdownMenuLabel>\n\n        {MenuItems}\n      </div>\n    </>\n  );\n}\n\nfunction setCookeTheme(theme: string) {\n  document.cookie = `theme=${theme}; path=/; max-age=31536000`;\n}\n\nfunction Icon({ theme }: { theme: string | undefined }) {\n  switch (theme) {\n    case 'light':\n      return <Sun className=\"h-4\" />;\n    case 'dark':\n      return <Moon className=\"h-4\" />;\n    case 'system':\n      return <Computer className=\"h-4\" />;\n  }\n}\n"]}