{"version":3,"sources":["../../src/makerkit/empty-state/index.tsx"],"names":["EmptyStateHeading","className","props","React","cn","EmptyStateText","EmptyStateButton","Button","EmptyState","children","childrenArray","heading","child","text","button","cmps","otherChildren"],"mappings":"8TAKA,IAAMA,EAAwE,CAAC,CAC7E,UAAAC,CACA,CAAA,GAAGC,CACL,CAAA,GACEC,mBAAA,aAAC,CAAA,IAAA,CAAA,CACC,UAAWC,kBAAG,CAAA,mCAAA,CAAqCH,CAAS,CAC3D,CAAA,GAAGC,CACN,CAAA,EAEFF,EAAkB,WAAc,CAAA,mBAAA,KAE1BK,CAAuE,CAAA,CAAC,CAC5E,SAAAJ,CAAAA,CAAAA,CACA,GAAGC,CACL,IACEC,kBAAA,CAAA,aAAA,CAAC,KAAE,SAAWC,CAAAA,kBAAAA,CAAG,gCAAiCH,CAAS,CAAA,CAAI,GAAGC,CAAAA,CAAO,EAE3EG,CAAe,CAAA,WAAA,CAAc,iBAEvBC,IAAAA,CAAAA,CAEF,CAAC,CAAE,SAAA,CAAAL,CAAW,CAAA,GAAGC,CAAM,CACzBC,GAAAA,kBAAAA,CAAA,cAACI,kBAAA,CAAA,CAAO,UAAWH,kBAAG,CAAA,MAAA,CAAQH,CAAS,CAAA,CAAI,GAAGC,CAAO,CAAA,EAGvDI,EAAiB,WAAc,CAAA,kBAAA,KAEzBE,CAA6D,CAAA,CAAC,CAClE,QAAA,CAAAC,EACA,SAAAR,CAAAA,CAAAA,CACA,GAAGC,CACL,CAAA,GAAM,CACJ,IAAMQ,CAAAA,CAAgBP,kBAAM,CAAA,QAAA,CAAS,QAAQM,CAAQ,CAAA,CAE/CE,EAAUD,CAAc,CAAA,IAAA,CAC3BE,GAAUT,kBAAM,CAAA,cAAA,CAAeS,CAAK,CAAA,EAAKA,EAAM,IAASZ,GAAAA,CAC3D,EAEMa,CAAOH,CAAAA,CAAAA,CAAc,KACxBE,CAAUT,EAAAA,kBAAAA,CAAM,cAAeS,CAAAA,CAAK,GAAKA,CAAM,CAAA,IAAA,GAASP,CAC3D,CAEMS,CAAAA,CAAAA,CAASJ,EAAc,IAC1BE,CAAAA,CAAAA,EAAUT,kBAAM,CAAA,cAAA,CAAeS,CAAK,CAAKA,EAAAA,CAAAA,CAAM,OAASN,CAC3D,CAAA,CAEMS,EAAO,CAACf,CAAAA,CAAmBK,CAAgBC,CAAAA,CAAgB,EAE3DU,CAAgBN,CAAAA,CAAAA,CAAc,OACjCE,CACCT,EAAAA,kBAAAA,CAAM,eAAeS,CAAK,CAAA,EAC1B,CAACG,CAAAA,CAAK,SAASH,CAAM,CAAA,IAA6B,CACtD,CAEA,CAAA,OACET,mBAAA,aAAC,CAAA,KAAA,CAAA,CACC,SAAWC,CAAAA,kBAAAA,CACT,oFACAH,CACF,CAAA,CACC,GAAGC,CAEJC,CAAAA,CAAAA,kBAAAA,CAAA,cAAC,KAAI,CAAA,CAAA,SAAA,CAAU,8CACZQ,CAAAA,CAAAA,CAAAA,CACAE,EACAC,CACAE,CAAAA,CACH,CACF,CAEJ,EACAR,EAAW,WAAc,CAAA,YAAA","file":"index.js","sourcesContent":["import React from 'react';\n\nimport { cn } from '../../lib/utils';\nimport { Button } from '../../shadcn/button';\n\nconst EmptyStateHeading: React.FC<React.HTMLAttributes<HTMLHeadingElement>> = ({\n  className,\n  ...props\n}) => (\n  <h3\n    className={cn('text-2xl font-bold tracking-tight', className)}\n    {...props}\n  />\n);\nEmptyStateHeading.displayName = 'EmptyStateHeading';\n\nconst EmptyStateText: React.FC<React.HTMLAttributes<HTMLParagraphElement>> = ({\n  className,\n  ...props\n}) => (\n  <p className={cn('text-muted-foreground text-sm', className)} {...props} />\n);\nEmptyStateText.displayName = 'EmptyStateText';\n\nconst EmptyStateButton: React.FC<\n  React.ComponentPropsWithoutRef<typeof Button>\n> = ({ className, ...props }) => (\n  <Button className={cn('mt-4', className)} {...props} />\n);\n\nEmptyStateButton.displayName = 'EmptyStateButton';\n\nconst EmptyState: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  className,\n  ...props\n}) => {\n  const childrenArray = React.Children.toArray(children);\n\n  const heading = childrenArray.find(\n    (child) => React.isValidElement(child) && child.type === EmptyStateHeading\n  );\n\n  const text = childrenArray.find(\n    (child) => React.isValidElement(child) && child.type === EmptyStateText\n  );\n\n  const button = childrenArray.find(\n    (child) => React.isValidElement(child) && child.type === EmptyStateButton\n  );\n\n  const cmps = [EmptyStateHeading, EmptyStateText, EmptyStateButton];\n\n  const otherChildren = childrenArray.filter(\n    (child) =>\n      React.isValidElement(child) &&\n      !cmps.includes(child.type as (typeof cmps)[number])\n  );\n\n  return (\n    <div\n      className={cn(\n        'flex flex-1 items-center justify-center rounded-lg border border-dashed shadow-xs',\n        className\n      )}\n      {...props}\n    >\n      <div className=\"flex flex-col items-center gap-1 text-center\">\n        {heading}\n        {text}\n        {button}\n        {otherChildren}\n      </div>\n    </div>\n  );\n};\nEmptyState.displayName = 'EmptyState';\n\nexport { EmptyState, EmptyStateHeading, EmptyStateText, EmptyStateButton };\n"]}